{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = \"http://localhost:4000\";\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + \"/todos\");\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addTodo = async (formData) => {\n  try {\n    const todo = {\n      name: formData.name,\n      description: formData.description,\n      status: false\n    };\n    const saveTodo = await axios.post(baseUrl + \"/add-todo\", todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateTodo = async (todo) => {\n  try {\n    const todoUpdate = {\n      status: true\n    };\n    const updatedTodo = await axios.put(`${baseUrl}/edit-todo/${todo._id}`, todoUpdate);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteTodo = async (_id) => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["/home/estudosetrabalho/√Årea de Trabalho/Vagas/Todo-List-ADAC/front-web/src/services/Api.ts"],"names":["axios","baseUrl","getTodos","todos","get","error","Error","addTodo","formData","todo","name","description","status","saveTodo","post","updateTodo","todoUpdate","updatedTodo","put","_id","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACvE,MAAI;AACF,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,QADoC,CAAhD;AAIA,WAAOE,KAAP;AACD,GAND,CAME,OAAME,KAAN,EAAa;AACb,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAVM;AAYP,OAAO,MAAME,OAAO,GAAG,OACrBC,QADqB,KAEmB;AACxC,MAAI;AACF,UAAMC,IAAgC,GAAG;AACvCC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IADwB;AAEvCC,MAAAA,WAAW,EAAEH,QAAQ,CAACG,WAFiB;AAGvCC,MAAAA,MAAM,EAAE;AAH+B,KAAzC;AAKA,UAAMC,QAAoC,GAAG,MAAMb,KAAK,CAACc,IAAN,CACjDb,OAAO,GAAG,WADuC,EAEjDQ,IAFiD,CAAnD;AAIA,WAAOI,QAAP;AACD,GAXD,CAWE,OAAMR,KAAN,EAAa;AACb,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMU,UAAU,GAAG,OACxBN,IADwB,KAEgB;AACxC,MAAI;AACF,UAAMO,UAAyC,GAAG;AAChDJ,MAAAA,MAAM,EAAE;AADwC,KAAlD;AAGA,UAAMK,WAAuC,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACnD,GAAEjB,OAAQ,cAAaQ,IAAI,CAACU,GAAI,EADmB,EAEpDH,UAFoD,CAAtD;AAIA,WAAOC,WAAP;AACD,GATD,CASE,OAAOZ,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAfM;AAiBP,OAAO,MAAMe,UAAU,GAAG,OACxBD,GADwB,KAEgB;AACxC,MAAI;AACF,UAAME,WAAuC,GAAG,MAAMrB,KAAK,CAACsB,MAAN,CACnD,GAAErB,OAAQ,gBAAekB,GAAI,EADsB,CAAtD;AAGA,WAAOE,WAAP;AACD,GALD,CAKE,OAAOhB,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAXM","sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nconst baseUrl: string = \"http://localhost:4000\";\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + \"/todos\"\n    )\n\n    return todos\n  } catch(error) {\n    throw new Error(error)\n  }\n}\n\nexport const addTodo = async (\n  formData: TodoInterface\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todo: Omit<TodoInterface, \"_id\"> = {\n      name: formData.name,\n      description: formData.description,\n      status: false,\n    } \n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n      baseUrl + \"/add-todo\",\n      todo\n    )\n    return saveTodo\n  } catch(error) {\n    throw new Error(error)\n  }\n}\n\nexport const updateTodo = async (\n  todo: TodoInterface\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todoUpdate: Pick<TodoInterface, \"status\"> = {\n      status: true,\n    }\n    const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n      `${baseUrl}/edit-todo/${todo._id}`,\n      todoUpdate\n    )\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport const deleteTodo = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/delete-todo/${_id}`\n    )\n    return deletedTodo\n  } catch (error) {\n    throw new Error(error)\n  }\n}"]},"metadata":{},"sourceType":"module"}