{"ast":null,"code":"var _jsxFileName = \"/home/estudosetrabalho/\\xC1rea de Trabalho/Vagas/Todo-List-ADAC/front-web/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CreateGlobalStyle from './styles/global';\nimport AddTodo from './components/AddTodo';\nimport TodoItem from './components/TodoItem';\nimport { Container, Header } from './components/AddTodoStyle';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './services/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    addTodo(formData).then(({\n      status,\n      data\n    }) => {\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n          saveTodo: handleSaveTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n          updateTodo: handleUpdateTodo,\n          deleteTodo: handleDeleteTodo,\n          todo: todo\n        }, todo._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateGlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/estudosetrabalho/√Årea de Trabalho/Vagas/Todo-List-ADAC/front-web/src/App.tsx"],"names":["React","useEffect","useState","CreateGlobalStyle","AddTodo","TodoItem","Container","Header","getTodos","addTodo","updateTodo","deleteTodo","App","todos","setTodos","fetchTodos","then","data","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","status","Error","handleUpdateTodo","todo","handleDeleteTodo","_id","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,iBAAP,MAA8B,iBAA9B;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,2BAAlC;AAEA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,EAAwCC,UAAxC,QAA0D,gBAA1D;;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAkB,EAAlB,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAY;AAC7BP,IAAAA,QAAQ,GACLQ,IADH,CACQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA;AAAF;AAAR,KAAD,KAAgDC,QAAQ,CAACD,KAAD,CADhE,EAEGK,KAFH,CAEUC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFzB;AAGD,GAJD;;AAMA,QAAMG,cAAc,GAAG,CAACC,CAAD,EAAqBC,QAArB,KAAuD;AAC5ED,IAAAA,CAAC,CAACE,cAAF;AACAhB,IAAAA,OAAO,CAACe,QAAD,CAAP,CACGR,IADH,CACQ,CAAC;AAAEU,MAAAA,MAAF;AAAUT,MAAAA;AAAV,KAAD,KAAsB;AAC1B,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,KANH,EAOGK,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AAQD,GAVD;;AAYA,QAAMS,gBAAgB,GAAIC,IAAD,IAA+B;AACtDnB,IAAAA,UAAU,CAACmB,IAAD,CAAV,CACGb,IADH,CACQ,CAAC;AAAEU,MAAAA,MAAF;AAAUT,MAAAA;AAAV,KAAD,KAAsB;AAC1B,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,KANH,EAOGK,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AAQD,GATD;;AAWA,QAAMW,gBAAgB,GAAIC,GAAD,IAAuB;AAC9CpB,IAAAA,UAAU,CAACoB,GAAD,CAAV,CACGf,IADH,CACQ,CAAC;AAAEU,MAAAA,MAAF;AAAUT,MAAAA;AAAV,KAAD,KAAsB;AAC1B,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,KANH,EAOGK,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AAQD,GATD;;AAWA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACA,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEG;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADA,EAECT,KAAK,CAACmB,GAAN,CAAWH,IAAD,iBACT,QAAC,QAAD;AAEE,UAAA,UAAU,EAAED,gBAFd;AAGE,UAAA,UAAU,EAAEE,gBAHd;AAIE,UAAA,IAAI,EAAED;AAJR,WACOA,IAAI,CAACE,GADZ;AAAA;AAAA;AAAA;AAAA,gBADD,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAiBD;;GAhEQnB,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport CreateGlobalStyle from './styles/global';\n\nimport AddTodo from './components/AddTodo'\n\nimport TodoItem from './components/TodoItem';\n\nimport { Container, Header } from './components/AddTodoStyle'\n\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './services/Api';\n\n\n\nfunction App() {\n  const [todos, setTodos] = useState<TodoInterface[]>([]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = (): void => {\n    getTodos()\n      .then(({ data: { todos } }: TodoInterface[] | any) => setTodos(todos))\n      .catch((err: Error) => console.log(err));\n  };\n\n  const handleSaveTodo = (e: React.FormEvent, formData: TodoInterface): void => {\n    e.preventDefault();\n    addTodo(formData)\n      .then(({ status, data }) => {\n        if (status !== 201) {\n          throw new Error('Error! Todo not saved');\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleUpdateTodo = (todo: TodoInterface): void => {\n    updateTodo(todo)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not updated');\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not deleted');\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <Container>\n        <Header>\n        <AddTodo saveTodo={handleSaveTodo} />\n        {todos.map((todo: TodoInterface) => (\n          <TodoItem\n            key={todo._id}\n            updateTodo={handleUpdateTodo}\n            deleteTodo={handleDeleteTodo}\n            todo={todo} />\n        ))}\n        </Header>\n      </Container>\n      <CreateGlobalStyle />\n    </>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}